<% include ../partials/attendanceHeader%>
  <div class="container">
    <h3>View Attendance With Sign In/Out</h3>
    <table class="table">
      <label class="pl-3">From:</label>
      <div class="md-form col-xl-3">
        <input name="from" type="date" id="from_txt" required>
      </div>
      <label class="pl-3">To:</label>
      <div class="md-form col-xl-3">
        <input name="to" type="date" id="to_txt" required>
      </div>
      <button id="generate_button" type="button" class="btn btn-primary">Generate</button>
      <br>

      <div class="preloader-wrapper big active" id="spinner" style="top: 50%; left: 50%;">
        <div class="spinner-layer spinner-blue-only">
          <div class="circle-clipper left"><div class="circle"></div></div>
          <div class="gap-patch"><div class="circle"></div></div>
          <div class="circle-clipper right"><div class="circle"></div></div>
        </div>
      </div>

      <table id="data_table" class="table stripe" cellspacing="0" width="100%">
        <thead>
          <tr>
            <td>NIK</td>
            <td>Nama</td>
            <td>Department</td>
            <td>Atasan Langsung</td>
            <td>Tanggal</td>
            <td>Jam Masuk</td>
            <td>Absensi</td>
            <td>Total Durasi Jam Kerja</td>
          </tr>
        </thead>
        <tbody>
        </tbody>
      </table>
    </table>
  </div>

  </div>
  </main>
  <br>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.20.1/moment.min.js"></script>
  <script src="/scripts/mdb.js"></script>
  <script type="text/javascript" src="https://cdn.datatables.net/1.10.8/js/jquery.dataTables.min.js"></script>
  <script type="text/javascript" language="javascript" src="https://cdn.datatables.net/buttons/1.5.1/js/dataTables.buttons.min.js">
  </script>
  <script type="text/javascript" language="javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js">
  </script>
  <script type="text/javascript" language="javascript" src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.32/pdfmake.min.js">
  </script>
  <script type="text/javascript" language="javascript" src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.32/vfs_fonts.js">
  </script>
  <script type="text/javascript" language="javascript" src="https://cdn.datatables.net/buttons/1.5.1/js/buttons.html5.min.js">
  </script>
  <script src="/scripts/attendances/date-input-validator.js"></script>
  <script src="/scripts/attendances/loading-spinner.js"></script>
  <script src="/scripts/attendances/clock-pairing.js"></script>
  <script src="/scripts/attendances/clock-list-dialog.js"></script>

  <script type="text/javascript">
    $(".button-collapse").sideNav();
    $('.mdb-select').material_select();
    $('#data_table').DataTable({
      dom: 'Bfrtip',
      lengthMenu: [
        [10, 25, 50, -1],
        [10, 25, 50, "All"]
      ],
      buttons: [
        'pageLength',
        'copyHtml5',
        'excelHtml5',
        {
          extend: 'pdf',
          text: 'Pdf',
          orientation: 'landscape'
        }
      ]
    });
    
    let dosenTidakTetapMaxTime = '<%=configuration.dosenTidakTetapMaxTime%>';
    let dateInputValidator = DateInputValidator.bind({
      fromTxt: 'from_txt',
      toTxt: 'to_txt'
    });
    let loadingSpinner = LoadingSpinner.bind({
      spinner: 'spinner',
      hideableNodes: ['data_table_wrapper'],
      disableNodes: ['generate_button']
    });

    // data berisi array of JSON of satu orang dengan absensi-nya utk hari itu
    function renderTable(data) {
      $.fn.dataTable.ext.errMode = 'none';
      let result = [];
      for (let i = 0; i < data.length; i++) {
        let clocks = data[i].absensi.map(clock => moment(clock.date));
        let clockPairingResult = ClockPairing.process(clocks, {
          dosenTidakTetapMaxTime: dosenTidakTetapMaxTime,
          department: data[i].department,
          jamMasuk: moment(data[i].jam_masuk).format('HH:mm:ss')
        });
        let clockPairsDisplay = clockPairingResult.flaggedClockPairs;
        let flaggedTotalWorkingTime = clockPairingResult.flaggedTotalWorkingTime;
        result.push([
          data[i].nik,
          data[i].first_Name + " " + (data[i].last_Name ? data[i].last_Name : ""),
          data[i].department,
          (data[i].atasan_langsung ? data[i].atasan_langsung : ""),
          moment(data[i].absensi.length ? data[i].absensi[0].date : data[i].current_date).format("D MMMM YYYY"),
          (data[i].jam_masuk ? moment(data[i].jam_masuk).format("HH:mm:ss") : ""),
          clockPairsDisplay,
          flaggedTotalWorkingTime
        ])
      }

      $('#data_table').DataTable({
        destroy: true,
        dom: 'Bfrtip',
        lengthMenu: [ [10, 25, 50, -1], [10, 25, 50, "All"] ],
        buttons: [
          'pageLength',
          'copyHtml5',
          'excelHtml5',
          {
            extend: 'pdf',
            text: 'Pdf',
            orientation: 'landscape'
          }
        ],
        data: result,
        columns: [
          {title: "NIK"},
          {title: "Nama"},
          {title: "Department"},
          {title: "Atasan Langsung"},
          {title: "Tanggal"},
          {title: "Jam Masuk"},
          {title: "Absensi"},
          {title: "Total Durasi Jam Kerja"}
        ]
      })
    }
    
    function complementAbsentEmployees(employees, attendances, fromString, toString) {
      let exist = {};
      attendances.forEach(att => {
        if (['Resign', '', null, undefined].includes(att.department)) return;
        att.absensi.forEach(clock => {
          let key = att.nik + "#" + moment(clock.date).format('YYYY-MM-DD');
          exist[key] = true;
        });
      });
      let completeAttendances = attendances;
      let days = moment(toString, 'YYYY-MM-DD').diff(moment(fromString, 'YYYY-MM-DD'), 'days') + 1;
      let fromMoment = moment(fromString, 'YYYY-MM-DD');
      for (let i = 0; i < days; i++) {
        employees.forEach(emp => {
          if (['Resign', '', null, undefined].includes(emp.department)) return;
          let key = emp.nik + "#" + fromMoment.format('YYYY-MM-DD');
          if (!exist[key]) {
            exist[key] = true;
            completeAttendances.push({
              nik: emp.nik,
              first_Name: emp.first_Name,
              last_Name: emp.last_Name,
              department: emp.department,
              atasan_langsung: emp.atasan_langsung,
              current_date: moment(fromMoment).toDate(),
              absensi: [],
              jam_masuk: emp.jam_masuk
            });
          }
        });
        fromMoment.add(1, 'days');
      }
      return completeAttendances;
    }

    $('#generate_button').on('click', async function() {
      if (!dateInputValidator.isValid()) return;
      let fromString = $('#from_txt').val();
      let toString = $('#to_txt').val();
      loadingSpinner.start();
      try {
        let attendances = await $.getJSON("/api/attendances", {from:fromString, to:toString});
        let employees = await $.getJSON("/api/employeedata");
        let completeAttendances = complementAbsentEmployees(employees, attendances, fromString, toString);
        renderTable(completeAttendances);
        ClockListDialog.bind({ tableId: 'data_table' });
        loadingSpinner.stop();
      } catch (err) {
        console.log(err);
        loadingSpinner.init();
      }
    });
  </script>
  </body>

</html>
