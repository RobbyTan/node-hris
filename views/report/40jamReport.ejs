<html>

<% include ../partials/head-table %>

<body>

	<div class="container mt-3">
		<% include ../partials/nav %>
		<h3>40 jam per minggu</h3>

		<form id="form-generate">
			<label class="pl-3">Start:</label>
			<div class="md-form col-xl-3">
				<input id="txt-start" name="txt-start" type="date" required>
			</div>
			<label class="pl-3">End:</label>
			<div class="md-form col-xl-3">
				<input id="txt-end" name="txt-end" type="date" required>
			</div>
			<button type="submit" class="btn btn-primary">Generate</button>
		</form>

		<div id="spinner" class="preloader-wrapper big active" style="top: 50%; left: 50%; display:none;">
      <div class="spinner-layer spinner-blue-only">
        <div class="circle-clipper left">
          <div class="circle"></div>
        </div>
        <div class="gap-patch">
          <div class="circle"></div>
        </div>
        <div class="circle-clipper right">
          <div class="circle"></div>
        </div>
      </div>
    </div>

    <div id="div-table" style="display:none;">
			<table id="table" class="table stripe" cellspacing="0" width="100%">
				<thead>
					<tr>
						<td>NIK</td>
						<td>Nama</td>
						<td>Kategori Pegawai</td>
						<td>Departemen</td>
						<td>Atasan Langsung</td>
						<td>Jam Masuk</td>
						<td>Distribusi Jam Kerja</td>
						<td>Total Jam Kerja</td>
					</tr>
				</thead>
				<tbody>
				</tbody>
			</table>
		</div>
	</div>

	<% include ../partials/script %>
	<script src="https://cdn.datatables.net/1.10.16/js/jquery.dataTables.min.js"></script>
	<script src="https://cdn.datatables.net/buttons/1.5.1/js/dataTables.buttons.min.js"></script>
	<script src="https://cdn.datatables.net/buttons/1.5.1/js/buttons.html5.min.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.32/pdfmake.min.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.32/vfs_fonts.js"></script>
	<script src="/scripts/doublescore.js"></script>
	<script src="/scripts/attendances/clock-pairing.js"></script>
	<script>
		$('.button-collapse').sideNav()
		$('.mdb-select').material_select()

		let dosenTidakTetapMaxTime = '<%= configuration.dosenTidakTetapMaxTime %>'

		function processPunctuality(employees, attendances) {
			// group attendances by nim then date
			attendances = _.groupBy(attendances, 'nik')
			for (let nik in attendances) {
				attendances[nik] = _.groupBy(attendances[nik], (att) => moment(att.date).format('YYYY-MM-DD'))
			}

			// generate weeklies report for every employees
			let employeeDict = {}
			for (let emp of employees) {
				// jam kerja per minggu
				let curDate = moment($('#txt-start').val()),
					numberOfDays = moment($('#txt-end').val()).diff(moment($('#txt-start').val()), 'days') + 1,
					listJamKerjaMs = [],
					weeklyTotalJamKerjaMs = 0;
				for (let dayCounter = 0; dayCounter < numberOfDays; dayCounter++) {
					if (attendances[emp.nik] && attendances[emp.nik][curDate.format('YYYY-MM-DD')]) {
						let clockPairingResult = ClockPairing.process(attendances[emp.nik][curDate.format('YYYY-MM-DD')], {
							dosenTidakTetapMaxTime: dosenTidakTetapMaxTime,
							department: emp.kategori_pegawai,
							jamMasuk: emp.jam_masuk
						})
						weeklyTotalJamKerjaMs += __.toMiliSeconds(clockPairingResult.totalWorkingTime)
					}
					if (curDate.format('dddd') == 'Sunday') {
						listJamKerjaMs.push(weeklyTotalJamKerjaMs)
						weeklyTotalJamKerjaMs = 0
					}
					curDate.add(1, 'days')
				}

				// formatting
				employeeDict[emp.nik] = {
					totalJamKerja: '',
					listJamKerja: '',
					...emp
				}
				employeeDict[emp.nik].totalJamKerja = __.toHHMMSS(listJamKerjaMs.reduce((a, b) => a + b))
				curDate = moment($('#txt-start').val())
				for (let jamKerjaMs of listJamKerjaMs) {
					if (jamKerjaMs < 40 * 60 * 60 * 1000) {
						employeeDict[emp.nik].listJamKerja +=
							`<span style="background:red;color:white;">${__.toHHMMSS(jamKerjaMs)}</span> 
							(${curDate.add(0, 'days').format('D MMM')} - ${moment(curDate).add(6, 'days').format('D MMM')}) <br>`
						employeeDict[emp.nik].kurangJam = true
					} else {
						employeeDict[emp.nik].listJamKerja +=
							`${__.toHHMMSS(jamKerjaMs)} (${curDate.add(0, 'days').format('D MMM')} - ${moment(curDate).add(6, 'days').format('D MMM')}) <br>`
					}
					curDate.add(1, 'days')
				}
			}
			return employeeDict
		}

		function renderTable(employeeDict) {
			let result = []
			for (let nik in employeeDict) {
				let emp = employeeDict[nik]
				let sudahBanyakPelanggaran = emp.kurangJam
				if (!sudahBanyakPelanggaran) continue
				result.push([
					emp.nik,
					emp.nama_depan + ' ' + (emp.nama_belakang || ''),
        	emp.kategori_pegawai || '-',
					emp.department || '-',
					emp.atasan_langsung || '-',
					(emp.jam_masuk ? (emp.jam_masuk + ':00') : '-'),
					emp.listJamKerja,
					emp.totalJamKerja
				])
			}

			console.log(result)

			$('#table').DataTable({
				destroy: true,
				dom: 'Bfrtip',
				lengthMenu: [
					[10, 25, 50, -1],
					[10, 25, 50, 'All']
				],
				buttons: [
					'pageLength',
					'copyHtml5',
					'excelHtml5',
					{
						extend: 'pdf',
						text: 'Pdf',
						orientation: 'landscape'
					}
				],
				data: result
			})
		}

		$('#txt-start').change(shiftDateInput)
		$('#txt-end').change(shiftDateInput)
		function shiftDateInput() {
			let strFromDate = $('#txt-start').val()
			if (strFromDate != '') {
				let momentFromDate = moment(strFromDate, 'YYYY-MM-DD')
				while (momentFromDate.format('dddd') != 'Monday') momentFromDate.subtract(1, 'days')
				if (momentFromDate.format('YYYY-MM-DD') != strFromDate) {
					toastr.info('From Date is shifted.')
					$('#txt-start').val(momentFromDate.format('YYYY-MM-DD'))
				}
			}
			let strToDate = $('#txt-end').val()
			if (strToDate != '') {
				let momentToDate = moment(strToDate, 'YYYY-MM-DD')
				while (momentToDate.format('dddd') != 'Sunday') momentToDate.add(1, 'days')
				if (momentToDate.format('YYYY-MM-DD') != strToDate) {
					toastr.info('To Date is shifted.')
					$('#txt-end').val(momentToDate.format('YYYY-MM-DD'))
				}
			}
		}

		$('#form-generate').submit(async function (evt) {
			evt.preventDefault()
			let startString = $('#txt-start').val()
			let endString = $('#txt-end').val()

			$(this).find('button').attr('disabled', true)
			$('#spinner').show()
			$('#div-table').hide()
			try {
				let employees = (await $.getJSON('/api/employee'))
						.filter(emp => (emp.status_pegawai || '').toUpperCase() !== 'NON-AKTIF')
				let attendances = await $.getJSON('/api/attendance/raw', {
					startString,
					endString
				})
				let employeeDict = processPunctuality(employees, attendances)
				renderTable(employeeDict)
				$('#div-table').show()
			} catch (err) {
				console.log(err)
				toastr.error('Failed to load!')
			} finally {
				$(this).find('button').attr('disabled', false)
				$('#spinner').hide()
			}
		})
	</script>
</body>

</html>